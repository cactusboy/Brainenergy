# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-07 10:32
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, default='/uploads/avatar/default.png', max_length=200, null=True, upload_to='avatar/%Y/%m', verbose_name='用户头像')),
                ('qq', models.CharField(blank=True, max_length=20, null=True, verbose_name='QQ号码')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号码')),
                ('url', models.URLField(blank=True, max_length=100, null=True, verbose_name='个人网页地址')),
                ('adduid', models.IntegerField(default=0, verbose_name='添加者id号')),
                ('address', models.CharField(blank=True, max_length=40, null=True, verbose_name='家庭地址')),
                ('organization', models.CharField(blank=True, max_length=40, null=True, verbose_name='机构')),
                ('sex', models.IntegerField(default=0, verbose_name='性别')),
                ('age', models.IntegerField(default=0, verbose_name='年龄')),
                ('utype', models.IntegerField(default=0, verbose_name='人员类型')),
                ('grade', models.IntegerField(default=0, verbose_name='年级')),
                ('guardian', models.CharField(blank=True, default='无', max_length=40, null=True, verbose_name='监护人')),
                ('relationship', models.CharField(blank=True, default='无', max_length=40, null=True, verbose_name='与监护人关系')),
                ('realname', models.CharField(blank=True, max_length=20, null=True, verbose_name='真实姓名')),
                ('modifytime', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='x', max_length=20, null=True, verbose_name='能力名称')),
            ],
        ),
        migrations.CreateModel(
            name='Activehistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField(default=0, verbose_name='用户id')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号码')),
                ('code', models.CharField(blank=True, max_length=6, null=True, verbose_name='激活码')),
                ('last_active', models.DateTimeField(auto_now=True, verbose_name='最后获取激活码的时间')),
                ('active_date', models.DateField(auto_now=True, verbose_name='最后获取激活码的当天日期')),
            ],
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qid', models.IntegerField(verbose_name='该选项题目ID')),
                ('content', models.CharField(default='x', max_length=40, verbose_name='答案内容')),
                ('ans_score', models.IntegerField(verbose_name='该选项分数')),
                ('sid', models.IntegerField(default=0, verbose_name='量表类型')),
                ('ans_img', models.CharField(blank=True, default='x', max_length=40, verbose_name='图片地址')),
            ],
            options={
                'verbose_name': '答案',
                'verbose_name_plural': '答案',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Exhistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField(default='x', verbose_name='用户id')),
                ('history', models.CharField(default='x', max_length=2000, verbose_name='测评记录str')),
                ('endtime', models.DateTimeField(auto_now=True, verbose_name='提交时间')),
                ('stype', models.IntegerField(default=0, verbose_name='量表类型')),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='x', max_length=40, verbose_name='问题题目')),
                ('img_src', models.CharField(blank=True, default='x', max_length=40, verbose_name='图片地址')),
                ('sid', models.IntegerField(default=0, verbose_name='该选项题目ID')),
                ('type', models.IntegerField(default=0, null=True, verbose_name='题目类型')),
                ('act_explain', models.CharField(default='x', max_length=40, verbose_name='操作说明')),
                ('right_answer', models.CharField(default='x', max_length=40, verbose_name='正确答案')),
                ('m', models.FloatField(default=0, verbose_name='m值')),
                ('sd', models.FloatField(default=0, verbose_name='sd值')),
                ('ability_id', models.IntegerField(default=0, verbose_name='能力类型')),
                ('range_score', models.IntegerField(default=0, verbose_name='最高分数阈值')),
                ('min_score', models.IntegerField(default=0, verbose_name='最低分数阈值')),
            ],
            options={
                'verbose_name': '问题',
                'verbose_name_plural': '问题',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Scales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='x', max_length=20, unique=True, verbose_name='量表名')),
                ('stype', models.CharField(default='x', max_length=10, unique=True, verbose_name='量表类型')),
                ('explain', models.CharField(default='x', max_length=40, verbose_name='量表说明')),
            ],
            options={
                'verbose_name': '量表',
                'verbose_name_plural': '量表',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, default='/uploads/avatar/default.png', max_length=200, null=True, upload_to='avatar/%Y/%m', verbose_name='用户头像')),
                ('qq', models.CharField(blank=True, max_length=20, null=True, verbose_name='QQ号码')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号码')),
                ('url', models.URLField(blank=True, max_length=100, null=True, verbose_name='个人网页地址')),
                ('adduid', models.IntegerField(default=0, verbose_name='添加者id号')),
                ('address', models.CharField(blank=True, max_length=40, null=True, verbose_name='家庭地址')),
                ('organization', models.CharField(blank=True, max_length=40, null=True, verbose_name='机构')),
                ('sex', models.IntegerField(default=0, verbose_name='性别')),
                ('age', models.IntegerField(default=0, verbose_name='年龄')),
                ('utype', models.IntegerField(default=0, verbose_name='人员类型')),
                ('grade', models.IntegerField(default=0, verbose_name='年级')),
                ('guardian', models.CharField(blank=True, max_length=40, null=True, verbose_name='监护人')),
                ('relationship', models.CharField(blank=True, max_length=40, null=True, verbose_name='与监护人关系')),
                ('realname', models.CharField(blank=True, max_length=20, null=True, verbose_name='真实姓名')),
            ],
            options={
                'verbose_name': '学生',
                'verbose_name_plural': '学生',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='questions',
            name='scales',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teacher.Scales', verbose_name='所属量表'),
        ),
        migrations.AddField(
            model_name='answers',
            name='questions',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teacher.Questions', verbose_name='所属问题'),
        ),
    ]
